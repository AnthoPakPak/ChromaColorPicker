ENV['PODSPEC'] = "ChromaColorPicker.podspec"

default_platform(:ios)

platform :ios do

  desc "Publish podspec, incrementing the patch version."
  lane :publish_pod do
    publish_podspec
  end

  desc "Runs unit tests. Installs pods if needed."
  lane :test do
    run_tests(scheme: "ChromaColorPickerTests")
    publish_pod
  end

end

def app_unit_tests(options)
  unit_tests(options)
  generate_tests_coverage(options) if options[:code_coverage]
end



def publish_podspec
  podspec = ENV['PODSPEC']
  version = bump_podspec_version(podspec)
  commit(podspec, 'Updated Podspec version.')
  push_to_git_remote(local_branch: git_branch)
  tag_build(version)
  pod_push(path: podspec)
end

def tag_build(tag)
  tag_exists_in_remote = `git ls-remote origin refs/tags/"#{tag}"`.length > 0
  sh "git fetch --tags --prune origin"

  if tag_exists_in_remote
    sh "git push --delete origin #{tag}"
  end

  add_git_tag(
      tag: tag,
      force: true,
      prefix: 'dev' # TEMP: This is temporary only intended for use in the `develop` branch.
  )
  push_git_tags
end
